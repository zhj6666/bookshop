<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookshop.dao.TradeMapper">
  <resultMap id="BaseResultMap" type="com.bookshop.beans.Trade">
    <id column="tradeid" jdbcType="INTEGER" property="tradeid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="tradetime" jdbcType="TIMESTAMP" property="tradetime" />
  </resultMap>

  <resultMap id="BaseResultMapWithUserinfo" type="com.bookshop.beans.Trade">
    <id column="tradeid" jdbcType="INTEGER" property="tradeid" />
    <!--&lt;result column="userid" jdbcType="INTEGER" property="userid" /&gt;-->
    <result column="tradetime" jdbcType="TIMESTAMP" property="tradetime" />

    <association javaType="com.bookshop.beans.Userinfo" property="userinfo">
      <id column="userid" jdbcType="INTEGER" property="userid" />
      <result column="username" jdbcType="VARCHAR" property="username" />
      <result column="accountid" jdbcType="INTEGER" property="accountid" />
      <result column="password" jdbcType="INTEGER" property="password" />
      <result column="location" jdbcType="VARCHAR" property="location" />
      <result column="phone" jdbcType="VARCHAR" property="phone" />
    </association>

  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    tradeid, userid, tradetime
  </sql>
  <sql id="Base_Column_List_With_Userinfo">
    t.tradeid, t.userid, t.tradetime,u.userid, u.username, u.accountid,u.password,u.location,u.phone
  </sql>

  <select id="selectByExampleWithUserinfo" parameterType="com.bookshop.beans.TradeExample" resultMap="BaseResultMapWithUserinfo">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_With_Userinfo" />
    from trade t LEFT  JOIN userinfo u ON t.`userid`=u.`userid`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithUserinfo" parameterType="java.lang.Integer" resultMap="BaseResultMapWithUserinfo">
    select
    <include refid="Base_Column_List_With_Userinfo" />
    from trade t LEFT  JOIN userinfo u ON t.`userid`=u.`userid`
    where tradeid = #{tradeid,jdbcType=INTEGER}
  </select>

  <select id="selectByExample" parameterType="com.bookshop.beans.TradeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade
    where tradeid = #{tradeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trade
    where tradeid = #{tradeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bookshop.beans.TradeExample">
    delete from trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bookshop.beans.Trade">
    insert into trade (tradeid, userid, tradetime
      )
    values (#{tradeid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{tradetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bookshop.beans.Trade">
    insert into trade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeid != null">
        tradeid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="tradetime != null">
        tradetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeid != null">
        #{tradeid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="tradetime != null">
        #{tradetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bookshop.beans.TradeExample" resultType="java.lang.Long">
    select count(*) from trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trade
    <set>
      <if test="record.tradeid != null">
        tradeid = #{record.tradeid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.tradetime != null">
        tradetime = #{record.tradetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trade
    set tradeid = #{record.tradeid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      tradetime = #{record.tradetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookshop.beans.Trade">
    update trade
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="tradetime != null">
        tradetime = #{tradetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where tradeid = #{tradeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookshop.beans.Trade">
    update trade
    set userid = #{userid,jdbcType=INTEGER},
      tradetime = #{tradetime,jdbcType=TIMESTAMP}
    where tradeid = #{tradeid,jdbcType=INTEGER}
  </update>
</mapper>