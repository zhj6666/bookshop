<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookshop.dao.TradeitemMapper">

  <resultMap id="BaseResultMap" type="com.bookshop.beans.Tradeitem">
    <id column="itemid" jdbcType="INTEGER" property="itemid" />
    <result column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="tradeid" jdbcType="INTEGER" property="tradeid" />
  </resultMap>

  <resultMap id="BaseResultMapWithBookAndTrade" type="com.bookshop.beans.Tradeitem">
    <id column="itemid" jdbcType="INTEGER" property="itemid" />
    <!--&lt;result column="bookid" jdbcType="INTEGER" property="bookid" /&gt;-->
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <!--&lt;result column="tradeid" jdbcType="INTEGER" property="tradeid" /&gt;-->
    <association javaType="com.bookshop.beans.Book" property="book">
      <id column="id" property="id" />
      <result column="author" property="author" />
      <result column="title" property="title" />
      <result column="price" property="price" />
      <result column="publicationdate" property="publicationdate" />
      <result column="salesvolume" property="salesvolume" />
      <result column="address" property="address" />
      <result column="remark" property="remark" />
      <result column="picture" property="picture" />
    </association>
    <association javaType="com.bookshop.beans.Trade" property="trade">
      <id column="tradeid" property="tradeid" />
      <result column="userid" property="userid" />
      <result column="tradetime" property="tradetime" />


    </association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    itemid, bookid, quantity, tradeid
  </sql>

  <sql id="Base_Column_List_With_Book_And_Trade">
    i.itemid, i.bookid, i.quantity, i.tradeid,
    b.id,b.author,b.title,b.price,b.publicationdate,b.salesvolume,b.address,b.remark,b.picture,
    t.tradeid,t.userid,t.tradetime
  </sql>

  <select id="selectByExampleWithBookAndTrade" parameterType="com.bookshop.beans.TradeitemExample" resultMap="BaseResultMapWithBookAndTrade">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_With_Book_And_Trade" />
    from tradeitem i LEFT JOIN book b ON i.`bookid`=b.`id` LEFT JOIN trade t ON i.`tradeid`=t.`tradeid`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithBookAndTrade" parameterType="java.lang.Integer" resultMap="BaseResultMapWithBookAndTrade">
    select
    <include refid="Base_Column_List_With_Book_And_Trade" />
    from tradeitem i LEFT JOIN book b ON i.`bookid`=b.`id` LEFT JOIN trade t ON i.`tradeid`=t.`tradeid`
    where itemid = #{itemid,jdbcType=INTEGER}
  </select>

  <select id="selectByExample" parameterType="com.bookshop.beans.TradeitemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tradeitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tradeitem
    where itemid = #{itemid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tradeitem
    where itemid = #{itemid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bookshop.beans.TradeitemExample">
    delete from tradeitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bookshop.beans.Tradeitem">
    insert into tradeitem (itemid, bookid, quantity, 
      tradeid)
    values (#{itemid,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, 
      #{tradeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bookshop.beans.Tradeitem">

    insert into  tradeitem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemid != null">
        itemid,
      </if>
      <if test="bookid != null">
        bookid,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="tradeid != null">
        tradeid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemid != null">
        #{itemid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="tradeid != null">
        #{tradeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bookshop.beans.TradeitemExample" resultType="java.lang.Long">
    select count(*) from tradeitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tradeitem
    <set>
      <if test="record.itemid != null">
        itemid = #{record.itemid,jdbcType=INTEGER},
      </if>
      <if test="record.bookid != null">
        bookid = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.tradeid != null">
        tradeid = #{record.tradeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tradeitem
    set itemid = #{record.itemid,jdbcType=INTEGER},
      bookid = #{record.bookid,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      tradeid = #{record.tradeid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookshop.beans.Tradeitem">
    update tradeitem
    <set>
      <if test="bookid != null">
        bookid = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="tradeid != null">
        tradeid = #{tradeid,jdbcType=INTEGER},
      </if>
    </set>
    where itemid = #{itemid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookshop.beans.Tradeitem">
    update tradeitem
    set bookid = #{bookid,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      tradeid = #{tradeid,jdbcType=INTEGER}
    where itemid = #{itemid,jdbcType=INTEGER}
  </update>
</mapper>